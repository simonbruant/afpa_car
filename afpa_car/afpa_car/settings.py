"""
Django settings for afpa_car project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# from .email_settings import EMAIL_USE_TLS, EMAIL_HOST, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD, EMAIL_PORT

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'j@&a0cmkkh)_00n#(jze%=sbofi&u0*d1xh1&xb_v2+2#f0d26'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'chat',
    'users',
    'carpooling',
    # 'channels', #pour les websockets
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'afpa_car.middlewares.LoginRequiredMiddleware'
]

ROOT_URLCONF = 'afpa_car.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'afpa_car.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

# DATABASES = {
#         'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#         }
# }

from .databases_settings import DATABASES
DATABASES = DATABASES

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 4,
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'fr'

TIME_ZONE = 'Europe/Paris'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

AUTH_USER_MODEL = 'users.User'

AUTHENTICATION_BACKENDS = ['django.contrib.auth.backends.AllowAllUsersModelBackend']

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

LOGIN_URL = '/login/' 
LOGIN_REDIRECT_URL = '/dashboard/'
LOGIN_EXEMPT_URLS = (
    r'^$',
    r'^signup/$',
    r'^password-reset/$',
    r'^password-reset/done/$',
    r'^password-reset/confirm/(?P<uidb64>[0-9A-Za-z]+)-(?P<token>.+)/$',
    r'^password-reset/complete/$',
    r'^activate/(?P<uidb64>[0-9A-Za-z]+)-(?P<token>.+)/$',
)

GLOBAL_URLS = (
    r'^cgu/$',
    r'^contact/$'
)

MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
MEDIA_URL = '/media/'

# EMAIL_USE_TLS = EMAIL_USE_TLS
# EMAIL_HOST = EMAIL_HOST
# EMAIL_HOST_USER = EMAIL_HOST_USER
# EMAIL_HOST_PASSWORD = EMAIL_HOST_PASSWORD
# EMAIL_PORT = EMAIL_PORT
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

#config pour les websockets
ASGI_APPLICATION = "afpa_car.routing.application"

CHANNEL_LAYERS = { 
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("localhost", 6379)],
            # "hosts": [os.environ.get('REDIS_URL', 'redis://localhost:6379')] #pour la production
        },
    },
}


# ----- APPEL DES FICHERS DU FRONTEND -----#

from os.path import dirname, realpath

ROOT_DIR = realpath(dirname(dirname(__file__))) 

CARPOOLING_CALENDAR_FILE = ""
CARPOOLING_PROFIL_FILE = ""
CARPOOLING_PREFERENCES_FILE = ""
CARPOOLING_GENERAL_INFOS_FILE = ""
CARPOOLING_AVATAR_FILE = ""
CARPOOLING_MAP_PROP_FILE = ""
CARPOOLING_MAP_TRIP_FILE = ""
app_path = os.path.join(ROOT_DIR, 'carpooling','static', 'carpooling', 'app')
if os.path.exists(app_path):
    app_static_files = os.listdir(app_path)
    if app_static_files:
        CARPOOLING_CALENDAR_FILE = [i for i in app_static_files if i.startswith('calendar.')][0]
        CARPOOLING_PROFIL_FILE = [i for i in app_static_files if i.startswith('profil.')][0]
        CARPOOLING_PREFERENCES_FILE = [i for i in app_static_files if i.startswith('preferences.')][0]
        CARPOOLING_GENERAL_INFOS_FILE = [i for i in app_static_files if i.startswith('general_infos.')][0]
        CARPOOLING_AVATAR_FILE = [i for i in app_static_files if i.startswith('avatar.')][0]
        # CARPOOLING_MAP_PROP_FILE = [i for i in app_static_files if i.startswith('mapProp.')][0]
        CARPOOLING_MAP_TRIP_FILE = [i for i in app_static_files if i.startswith('mapTrip.')][0]
        CARPOOLING_ADDR_POC_FILE = [i for i in app_static_files if i.startswith('addrPoc.')][0]
